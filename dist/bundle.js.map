{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://fourth-module/./components/renderHeader.js","webpack://fourth-module/./components/genetationRandomCard.js","webpack://fourth-module/./components/renderPagesLevels.js","webpack://fourth-module/./components/renderPageSelectedDifficulty.js","webpack://fourth-module/./components/renderGamePage.js","webpack://fourth-module/./components/renderMainPage.js","webpack://fourth-module/./index.js"],"sourcesContent":["import { renderMainPage } from './renderMainPage';\n\nconst header = document.querySelector('header');\nfunction renderHeader() {\n  const headerHtml = `\n  <div class=\"header\">\n  <div class=\"header-box\">\n  <div>\n    <p class=\"header-text header-text-count\">00<span>min</span>.00<span>sec</span></p>\n  </div>\n    <button class=\"button-start button-start-again\">Начать заново</button>\n  </div>\n  </div>\n\n  `;\n  header.innerHTML = headerHtml;\n  const buttonStartAgain = document.querySelector('.button-start-again');\n\n  buttonStartAgain.addEventListener('click', () => {\n    header.innerHTML = '';\n    renderMainPage();\n  });\n}\n\nexport default renderHeader;\n","const cards = [\n  './static/image/sixHearts.png',\n  './static/image/sevenHearts.png',\n  './static/image/eightHearts.png',\n  './static/image/nineHearts.png',\n  './static/image/tenHearts.png',\n  './static/image/jackHearts.png',\n  './static/image/queenHearts.png',\n  './static/image/kingHearts.png',\n  './static/image/aceOfHearts.png',\n  './static/image/sixClubs.png',\n  './static/image/sevenClubs.png',\n  './static/image/eightClubs.png',\n  './static/image/nineClubs.png',\n  './static/image/tenClubs.png',\n  './static/image/jackClubs.png',\n  './static/image/queenClubs.png',\n  './static/image/kingClubs.png',\n  './static/image/aceOfClubs.png',\n  './static/image/sixDiamonds.png',\n  './static/image/sevenDiamonds.png',\n  './static/image/eightDiamonds.png',\n  './static/image/nineDiamond.png',\n  './static/image/tenDiamonds.png',\n  './static/image/jackDiamond.png',\n  './static/image/queenDiamonds.png',\n  './static/image/kingDiamonds.png',\n  './static/image/aceOfDiamonds.png',\n  './static/image/sixSpades.png',\n  './static/image/sevenSpades.png',\n  './static/image/eightSpades.png',\n  './static/image/nineSpades.png',\n  './static/image/tenSpades.png',\n  './static/image/jackSpades.png',\n  './static/image/queenSpades.png',\n  './static/image/kingSpades.png',\n  './static/image/aceOfSpades.png',\n];\nfunction genetationRandomCard() {\n  const randomCard = Math.floor(Math.random() * 35);\n  return cards[randomCard];\n}\n\nexport default genetationRandomCard;\n","import genetationRandomCard from './genetationRandomCard';\nconst template = document.querySelector('.game');\n\nfunction renderPagesLevels(app, quantityCardsInLevel, levelDifficulty) {\n  app.innerHTML = `\n  <div class=\"level\">      \n    <div class=\"level-value\">\n    </div>\n  </div>`;\n  const levelValue = document.querySelector('.level-value');\n  levelValue.classList.add(`level-${levelDifficulty}`);\n\n  let index = 0;\n  do {\n    const clone = template.content.cloneNode(true);\n    let levelCard = clone.querySelector('.level-card');\n    levelCard.classList.add('level-card-shirt');\n    levelValue.appendChild(clone);\n    index++;\n  } while (index < quantityCardsInLevel);\n\n  const NodeListCards = document.querySelectorAll('.level-card');\n  const cards = Array.from(NodeListCards);\n\n  handlerCards(cards);\n}\n\nfunction handlerCards(cards) {\n  const generatedArrCards = [];\n  const comparisonValuesCards = [];\n  setTimeout(() => {\n    const findDup = findDuplicates(generatedArrCards);\n    findDup.length === 0 ? handlerCards(cards) : false;\n  }, 100);\n\n  cards.map((card) => {\n    card.classList.toggle('level-open');\n    const generatedRandomCardImages = genetationRandomCard();\n    generationArrIdentificalElements(\n      generatedRandomCardImages,\n      generatedArrCards,\n    );\n\n    card.style.backgroundImage = `url(${generatedRandomCardImages})`;\n\n    setTimeout(() => {\n      card.classList.toggle('level-open');\n      card.style.backgroundImage = `url(${'/static/image/cardShirt.png'})`;\n    }, 5000);\n\n    card.addEventListener('click', () => {\n      card.classList.toggle('level-open');\n      card.style.backgroundImage = `url(${generatedRandomCardImages})`;\n      comparisonValuesCards.push(card.style.backgroundImage);\n      setTimeout(() => {\n        if (\n          comparisonValuesCards.length === 2 &&\n          comparisonValuesCards[0] === comparisonValuesCards[1]\n        ) {\n          alert('Ты выиграл');\n        }\n        if (\n          comparisonValuesCards.length === 2 &&\n          comparisonValuesCards[0] !== comparisonValuesCards[1]\n        ) {\n          alert('Ты проиграл');\n        }\n      }, 100);\n    });\n  });\n}\n\n// функция генерации массива\nfunction generationArrIdentificalElements(\n  generatedRandomCardImages,\n  generatedArrCards,\n) {\n  generatedArrCards.push(generatedRandomCardImages);\n  return generatedArrCards;\n}\n\n// Функция поиска одинаковых элементов в массиве\nfunction findDuplicates(arr) {\n  const arrDup = arr.filter((item, index) => arr.indexOf(item) !== index);\n  return arrDup;\n}\n\nexport default renderPagesLevels;\n","import renderPagesLevels from './renderPagesLevels';\n\nconst app = document.querySelector('.app');\n\nfunction renderPageSelectedDifficulty(levelDifficulty) {\n  app.innerHTML = '';\n  const quantityCardsInLevel = [6, 12, 18];\n  switch (levelDifficulty) {\n    case 'easy':\n      renderPagesLevels(app, quantityCardsInLevel[0], levelDifficulty);\n      break;\n    case 'medium':\n      renderPagesLevels(app, quantityCardsInLevel[1], levelDifficulty);\n      break;\n    case 'hard':\n      renderPagesLevels(app, quantityCardsInLevel[2], levelDifficulty);\n      break;\n    default:\n      break;\n  }\n}\n\nexport default renderPageSelectedDifficulty;\n","import renderHeader from './renderHeader';\nimport renderPageSelectedDifficulty from './renderPageSelectedDifficulty';\n\nfunction renderGamePage(levelDifficulty) {\n  renderHeader();\n  renderPageSelectedDifficulty(levelDifficulty);\n}\n\nexport default renderGamePage;\n","import renderGamePage from './renderGamePage.js';\nconst app = document.querySelector('.app');\nconst header = document.querySelector('header');\n\nfunction renderMainPage() {\n  header.innerHTML = '';\n  const mainPageHtml = `\n<div class=\"container\">\n  <div class=\"main\">\n    <p class=\"main-text\">Выберите сложность</p>\n    <div class=\"main-checbox\">\n        <input type=\"radio\" id=\"easy\" name=\"difficulty\"/><label\n          for=\"easy\"\n          class=\"main-checbox-text\"\n          >1</label\n        >\n        <input type=\"radio\" id=\"medium\" name=\"difficulty\" /><label\n          for=\"medium\"\n          class=\"main-checbox-text\"\n          >2</label\n        >\n        <input type=\"radio\" id=\"hard\" name=\"difficulty\" /><label\n          for=\"hard\"\n          class=\"main-checbox-text\"\n          >3</label\n        >\n    </div>\n    <button class=\"button-start\">Старт</button>\n  </div>\n</div>\n\n`;\n  app.innerHTML = mainPageHtml;\n  const boxSelectedDifficulty = document.querySelector('.main');\n  boxSelectedDifficulty.addEventListener('click', (event) => {\n    const target = event.target;\n    if (target.closest('.main-checbox-text')) {\n      localStorage.setItem('checked', target.getAttribute('for'));\n    }\n    if (target.closest('.button-start')) {\n      let levelDifficulty = localStorage.getItem('checked');\n      renderGamePage(levelDifficulty);\n    }\n  });\n}\n\nexport { renderMainPage };\n","import { renderMainPage } from './components/renderMainPage';\nimport './css/style.css';\n\nrenderMainPage();\n"],"names":["header","document","querySelector","cards","randomCard","Math","floor","random","template","handlerCards","generatedArrCards","comparisonValuesCards","setTimeout","arr","filter","item","index","indexOf","length","map","card","classList","toggle","generatedRandomCardImages","push","generationArrIdentificalElements","style","backgroundImage","addEventListener","alert","app","quantityCardsInLevel","levelDifficulty","innerHTML","levelValue","add","clone","content","cloneNode","appendChild","NodeListCards","querySelectorAll","Array","from","renderMainPage","event","target","closest","localStorage","setItem","getAttribute","getItem"],"sourceRoot":""}